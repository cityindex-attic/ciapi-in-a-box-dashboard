
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"> 
<html lang="en"><head><title>A JSON Media Type for Describing the Structure and Meaning of JSON Documents</title> 
<meta http-equiv="Content-Type" content="text/html; charset=utf-8"> 
<meta name="description" content="A JSON Media Type for Describing the Structure and Meaning of JSON Documents"> 
<meta name="keywords" content="JSON, Schema, JavaScript, Object, Notation, Hyper Schema, Hypermedia"> 
<meta name="generator" content="xml2rfc v1.35 (http://xml.resource.org/)"> 
<meta name="viewport" content="width=600;" /> 
<style type='text/css'><!--
        
        h1, h2, h3, h4, h5, h6 {
                font-family: helvetica, monaco, "MS Sans Serif", arial, sans-serif;
                font-weight: bold; font-style: normal;
        }
        h1 { color: #900; background-color: transparent; text-align: right; }
        h3 { color: #333; background-color: transparent; }
 
        td.RFCbug {
                font-size: x-small; text-decoration: none;
                width: 30px; height: 30px; padding-top: 2px;
                text-align: justify; vertical-align: middle;
                background-color: #000;
        }
        td.RFCbug span.RFC {
                font-family: monaco, charcoal, geneva, "MS Sans Serif", helvetica, verdana, sans-serif;
                font-weight: bold; color: #666;
        }
        td.RFCbug span.hotText {
                font-family: charcoal, monaco, geneva, "MS Sans Serif", helvetica, verdana, sans-serif;
                font-weight: normal; text-align: center; color: #FFF;
        }
 
        table.TOCbug { width: 30px; height: 15px; }
        td.TOCbug {
                text-align: center; width: 30px; height: 15px;
                color: #FFF; background-color: #900;
        }
        td.TOCbug a {
                font-family: monaco, charcoal, geneva, "MS Sans Serif", helvetica, sans-serif;
                font-weight: bold; font-size: x-small; text-decoration: none;
                color: #FFF; background-color: transparent;
        }
 
        td.header {
                font-family: arial, helvetica, sans-serif; font-size: x-small;
                vertical-align: top; width: 33%;
                color: #FFF; background-color: #666;
        }
        td.author { font-weight: bold; font-size: x-small; margin-left: 4em; }
        td.author-text { font-size: x-small; }
 
        /* info code from SantaKlauss at http://www.madaboutstyle.com/tooltip2.html */
        a.info {
                /* This is the key. */
                position: relative;
                z-index: 24;
                text-decoration: none;
        }
        a.info:hover {
                z-index: 25;
                color: #FFF; background-color: #900;
        }
        a.info span { display: none; }
        a.info:hover span.info {
                /* The span will display just on :hover state. */
                display: block;
                position: absolute;
                font-size: smaller;
                top: 2em; left: -5em; width: 15em;
                padding: 2px; border: 1px solid #333;
                color: #900; background-color: #EEE;
                text-align: left;
        }
 
        a { font-weight: bold; }
        a:link    { color: #900; background-color: transparent; }
        a:visited { color: #633; background-color: transparent; }
        a:active  { color: #633; background-color: transparent; }
 
        p { margin-left: 2em; margin-right: 2em; }
        p.copyright { font-size: x-small; }
        p.toc { font-size: 85%;
		max-width: 80ex; 
		font-weight: bold; margin-left: 3em; }
        table.toc { margin: 0 0 0 3em; padding: 0; border: 0; vertical-align: text-top; }
        td.toc { font-size: 85%;
		max-width: 80ex; 
		font-weight: bold; vertical-align: text-top; }
 
        ol.text { margin-left: 2em; margin-right: 2em; }
        ul.text { margin-left: 2em; margin-right: 2em; }
        li      { margin-left: 3em; }
 
        /* RFC-2629 <spanx>s and <artwork>s. */
        em     { font-style: italic; }
        strong { font-weight: bold; }
        dfn    { font-weight: bold; font-style: normal; }
        cite   { font-weight: normal; font-style: normal; }
        tt     { color: #036; }
        tt, pre, pre dfn, pre em, pre cite, pre span {
                font-family: "Courier New", Courier, monospace; font-size: small;
        }
        pre {
                text-align: left; padding: 4px;
                color: #000; background-color: #CCC;
        }
        pre dfn  { color: #900; }
        pre em   { color: #66F; background-color: #FFC; font-weight: normal; }
        pre .key { color: #33C; font-weight: bold; }
        pre .id  { color: #900; }
        pre .str { color: #000; background-color: #CFF; }
        pre .val { color: #066; }
        pre .rep { color: #909; }
        pre .oth { color: #000; background-color: #FCF; }
        pre .err { background-color: #FCC; }
 
        /* RFC-2629 <texttable>s. */
        table.all, table.full, table.headers, table.none {
                font-size: 85%;
		max-width: 80ex; 
		text-align: center; border-width: 2px;
                vertical-align: top; border-collapse: collapse;
        }
        table.all, table.full { border-style: solid; border-color: black; }
        table.headers, table.none { border-style: none; }
        th {
                font-weight: bold; border-color: black;
                border-width: 2px 2px 3px 2px;
        }
        table.all th, table.full th { border-style: solid; }
        table.headers th { border-style: none none solid none; }
        table.none th { border-style: none; }
        table.all td {
                border-style: solid; border-color: #333;
                border-width: 1px 2px;
        }
        table.full td, table.headers td, table.none td { border-style: none; }
 
        hr { height: 1px; }
        hr.insert {
                width: 80%; border-style: none; border-width: 0;
                color: #CCC; background-color: #CCC;
        }
--></style> 
</head> 
<body> 
<table summary="layout" cellpadding="0" cellspacing="2" class="TOCbug" align="right"><tr><td class="TOCbug"><a href="#toc">&nbsp;TOC&nbsp;</a></td></tr></table> 
<table summary="layout" width="66%" border="0" cellpadding="0" cellspacing="0"><tr><td><table summary="layout" width="100%" border="0" cellpadding="2" cellspacing="1"> 
<tr><td class="header">Internet Engineering Task Force</td><td class="header">K. Zyp, Ed.</td></tr> 
<tr><td class="header">Internet-Draft</td><td class="header">SitePen (USA)</td></tr> 
<tr><td class="header">Intended status: Informational</td><td class="header">G. Court</td></tr> 
<tr><td class="header">Expires: May 26, 2011</td><td class="header">November 22, 2010</td></tr> 
</table></td></tr></table> 
<h1><br />A JSON Media Type for Describing the Structure and Meaning of JSON Documents<br />draft-zyp-json-schema-03</h1> 
 
<h3>Abstract</h3> 
 
<p>JSON (JavaScript Object Notation) Schema defines the media type "application/schema+json", 
      a JSON based format for defining 
      the structure of JSON data. JSON Schema provides a contract for what JSON 
      data is required for a given application and how to interact with it. JSON 
      Schema is intended to define validation, documentation, hyperlink 
      navigation, and interaction control of JSON data. 
</p> 
<h3>Status of This Memo</h3> 
<p> 
This Internet-Draft is submitted  in full
conformance with the provisions of BCP&nbsp;78 and BCP&nbsp;79.</p> 
<p> 
Internet-Drafts are working documents of the Internet Engineering
Task Force (IETF).  Note that other groups may also distribute
working documents as Internet-Drafts.  The list of current
Internet-Drafts is at http://datatracker.ietf.org/drafts/current/.</p> 
<p> 
Internet-Drafts are draft documents valid for a maximum of six months
and may be updated, replaced, or obsoleted by other documents at any time.
It is inappropriate to use Internet-Drafts as reference material or to cite
them other than as &ldquo;work in progress.&rdquo;</p> 
<p> 
This Internet-Draft will expire on May 26, 2011.</p> 
 
<h3>Copyright Notice</h3> 
<p> 
Copyright (c) 2010 IETF Trust and the persons identified as the
document authors.  All rights reserved.</p> 
<p> 
This document is subject to BCP 78 and the IETF Trust's Legal
Provisions Relating to IETF Documents
(http://trustee.ietf.org/license-info) in effect on the date of
publication of this document.  Please review these documents
carefully, as they describe your rights and restrictions with respect
to this document. Code Components extracted from this document must
include Simplified BSD License text as described in Section 4.e of
the Trust Legal Provisions and are provided without warranty as
described in the Simplified BSD License.</p> 
<a name="toc"></a><br /><hr /> 
<h3>Table of Contents</h3> 
<p class="toc"> 
<a href="#anchor1">1.</a>&nbsp;
Introduction<br /> 
<a href="#anchor2">2.</a>&nbsp;
Conventions<br /> 
<a href="#anchor3">3.</a>&nbsp;
Overview<br /> 
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#anchor4">3.1.</a>&nbsp;
Terminology<br /> 
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#anchor5">3.2.</a>&nbsp;
Design Considerations<br /> 
<a href="#anchor6">4.</a>&nbsp;
Schema/Instance Association<br /> 
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#anchor7">4.1.</a>&nbsp;
Self-Descriptive Schema<br /> 
<a href="#anchor8">5.</a>&nbsp;
Core Schema Definition<br /> 
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#anchor9">5.1.</a>&nbsp;
type<br /> 
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#properties">5.2.</a>&nbsp;
properties<br /> 
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#anchor10">5.3.</a>&nbsp;
patternProperties<br /> 
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#additionalProperties">5.4.</a>&nbsp;
additionalProperties<br /> 
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#anchor11">5.5.</a>&nbsp;
items<br /> 
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#additionalItems">5.6.</a>&nbsp;
additionalItems<br /> 
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#anchor12">5.7.</a>&nbsp;
required<br /> 
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#anchor13">5.8.</a>&nbsp;
dependencies<br /> 
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#anchor14">5.9.</a>&nbsp;
minimum<br /> 
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#anchor15">5.10.</a>&nbsp;
maximum<br /> 
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#anchor16">5.11.</a>&nbsp;
exclusiveMinimum<br /> 
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#anchor17">5.12.</a>&nbsp;
exclusiveMaximum<br /> 
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#anchor18">5.13.</a>&nbsp;
minItems<br /> 
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#anchor19">5.14.</a>&nbsp;
maxItems<br /> 
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#uniqueItems">5.15.</a>&nbsp;
uniqueItems<br /> 
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#anchor20">5.16.</a>&nbsp;
pattern<br /> 
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#anchor21">5.17.</a>&nbsp;
minLength<br /> 
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#anchor22">5.18.</a>&nbsp;
maxLength<br /> 
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#anchor23">5.19.</a>&nbsp;
enum<br /> 
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#anchor24">5.20.</a>&nbsp;
default<br /> 
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#anchor25">5.21.</a>&nbsp;
title<br /> 
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#anchor26">5.22.</a>&nbsp;
description<br /> 
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#anchor27">5.23.</a>&nbsp;
format<br /> 
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#anchor28">5.24.</a>&nbsp;
divisibleBy<br /> 
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#anchor29">5.25.</a>&nbsp;
disallow<br /> 
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#anchor30">5.26.</a>&nbsp;
extends<br /> 
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#anchor31">5.27.</a>&nbsp;
id<br /> 
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#anchor32">5.28.</a>&nbsp;
$ref<br /> 
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#anchor33">5.29.</a>&nbsp;
$schema<br /> 
<a href="#hyper-schema">6.</a>&nbsp;
Hyper Schema<br /> 
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#links">6.1.</a>&nbsp;
links<br /> 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#anchor34">6.1.1.</a>&nbsp;
Link Description Object<br /> 
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#anchor42">6.2.</a>&nbsp;
fragmentResolution<br /> 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#anchor43">6.2.1.</a>&nbsp;
slash-delimited fragment resolution<br /> 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#anchor44">6.2.2.</a>&nbsp;
dot-delimited fragment resolution<br /> 
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#anchor45">6.3.</a>&nbsp;
readonly<br /> 
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#anchor46">6.4.</a>&nbsp;
contentEncoding<br /> 
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#anchor47">6.5.</a>&nbsp;
pathStart<br /> 
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#anchor48">6.6.</a>&nbsp;
mediaType<br /> 
<a href="#anchor49">7.</a>&nbsp;
Security Considerations<br /> 
<a href="#anchor50">8.</a>&nbsp;
IANA Considerations<br /> 
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#anchor51">8.1.</a>&nbsp;
Registry of Link Relations<br /> 
<a href="#rfc.references1">9.</a>&nbsp;
References<br /> 
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#rfc.references1">9.1.</a>&nbsp;
Normative References<br /> 
&nbsp;&nbsp;&nbsp;&nbsp;<a href="#rfc.references2">9.2.</a>&nbsp;
Informative References<br /> 
<a href="#anchor54">Appendix&nbsp;A.</a>&nbsp;
Change Log<br /> 
<a href="#anchor55">Appendix&nbsp;B.</a>&nbsp;
Open Issues<br /> 
</p> 
<br clear="all" /> 
 
<a name="anchor1"></a><br /><hr /> 
<table summary="layout" cellpadding="0" cellspacing="2" class="TOCbug" align="right"><tr><td class="TOCbug"><a href="#toc">&nbsp;TOC&nbsp;</a></td></tr></table> 
<a name="rfc.section.1"></a><h3>1.&nbsp;
Introduction</h3> 
 
<p>JSON (JavaScript Object Notation) Schema is a JSON media type for defining 
      the structure of JSON data. JSON Schema provides a contract for what JSON 
      data is required for a given application and how to interact with it. JSON 
      Schema is intended to define validation, documentation, hyperlink 
      navigation, and interaction control of JSON data. 
</p> 
<a name="anchor2"></a><br /><hr /> 
<table summary="layout" cellpadding="0" cellspacing="2" class="TOCbug" align="right"><tr><td class="TOCbug"><a href="#toc">&nbsp;TOC&nbsp;</a></td></tr></table> 
<a name="rfc.section.2"></a><h3>2.&nbsp;
Conventions</h3> 
 
<p>The key words "MUST", "MUST
      NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT",
      "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be
      interpreted as described in <a class='info' href='#RFC2119'>RFC 2119<span> (</span><span class='info'>Bradner, S., &ldquo;Key words for use in RFCs to Indicate Requirement Levels,&rdquo; March&nbsp;1997.</span><span>)</span></a> [RFC2119].
</p> 
<a name="anchor3"></a><br /><hr /> 
<table summary="layout" cellpadding="0" cellspacing="2" class="TOCbug" align="right"><tr><td class="TOCbug"><a href="#toc">&nbsp;TOC&nbsp;</a></td></tr></table> 
<a name="rfc.section.3"></a><h3>3.&nbsp;
Overview</h3> 
 
<p>JSON Schema defines the media type "application/schema+json" for 
      describing the structure of other
      JSON documents. JSON Schema is JSON-based and includes facilities 
      for describing the structure of JSON documents in terms of
      allowable values, descriptions, and interpreting relations with other resources.
</p> 
<p>JSON Schema format is organized into several separate definitions. The first 
      definition is the core schema specification. This definition is primary 
      concerned with describing a JSON structure and specifying valid elements
      in the structure. The second definition is the Hyper Schema specification
      which is intended define elements in a structure that can be interpreted as
      hyperlinks.
      Hyper Schema builds on JSON Schema to describe the hyperlink structure of 
      other JSON documents and elements of interaction. This allows user agents to be able to successfully navigate
      JSON documents based on their schemas.
</p> 
<p> 
      Cumulatively JSON Schema acts as a meta-document that can be used to define the required type and constraints on
      property values, as well as define the meaning of the property values
      for the purpose of describing a resource and determining hyperlinks
      within the representation. 
</p> 
<p>An example JSON Schema that describes products might look like:
</p><div style='display: table; width: 0; margin-left: 3em; margin-right: auto'><pre> 
{
  "name":"Product",
  "properties":{
    "id":{
      "type":"number",
      "description":"Product identifier",
      "required":true
    },
    "name":{
      "description":"Name of the product",
      "type":"string",
      "required":true
    },
    "price":{
      "required":true,
      "type": "number",
      "minimum":0,
      "required":true
    },
    "tags":{
      "type":"array",
      "items":{
        "type":"string"
      }
    }
  },
  "links":[
    {
      "rel":"full",
      "href":"{id}"
    },
    {
      "rel":"comments",
      "href":"comments/?id={id}"
    }
  ]
}
</pre></div> 
<p> 
	This schema defines the properties of the instance JSON documents, 
	the required properties (id, name, and price), as well as an optional
	property (tags). This also defines the link relations of the instance
	JSON documents.
	
</p> 
<a name="anchor4"></a><br /><hr /> 
<table summary="layout" cellpadding="0" cellspacing="2" class="TOCbug" align="right"><tr><td class="TOCbug"><a href="#toc">&nbsp;TOC&nbsp;</a></td></tr></table> 
<a name="rfc.section.3.1"></a><h3>3.1.&nbsp;
Terminology</h3> 
 
<p>For this specification, <strong>schema</strong> will be used to denote a JSON Schema 
      definition, and an <strong>instance</strong> refers to a JSON value that the schema 
      will be describing and validating.
</p> 
<a name="anchor5"></a><br /><hr /> 
<table summary="layout" cellpadding="0" cellspacing="2" class="TOCbug" align="right"><tr><td class="TOCbug"><a href="#toc">&nbsp;TOC&nbsp;</a></td></tr></table> 
<a name="rfc.section.3.2"></a><h3>3.2.&nbsp;
Design Considerations</h3> 
 
<p> 
	The JSON Schema media type does not attempt to dictate the structure of JSON
	representations that contain data, but rather provides a separate format
	for flexibly communicating how a JSON representation should be
	interpreted and validated, such that user agents can properly understand
	acceptable structures and extrapolate hyperlink information
	with the JSON document. It is acknowledged that JSON documents come
	in a variety of structures, and JSON is unique in that the structure
	of stored data structures often prescribes a non-ambiguous definite
	JSON representation. Attempting to force a specific structure is generally
	not viable, and therefore JSON Schema allows for a great flexibility
	in the structure of the JSON data that it describes.
	
</p> 
<p>This specification is protocol agnostic.
	The underlying protocol (such as HTTP) should sufficiently define the
	semantics of the client-server interface, the retrieval of resource
	representations linked to by JSON representations, and modification of 
	those resources. The goal of this
	format is to sufficiently describe JSON structures such that one can
	utilize existing information available in existing JSON
	representations from a large variety of services that leverage a representational state transfer
	architecture using existing protocols.
 
</p> 
<a name="anchor6"></a><br /><hr /> 
<table summary="layout" cellpadding="0" cellspacing="2" class="TOCbug" align="right"><tr><td class="TOCbug"><a href="#toc">&nbsp;TOC&nbsp;</a></td></tr></table> 
<a name="rfc.section.4"></a><h3>4.&nbsp;
Schema/Instance Association</h3> 
 
<p> 
	JSON Schema instances are correlated to their schema by the "describedby"
	relation, where the schema is defined to be the target of the relation.
	Instance representations may be of the "application/json" media type or
	any other subtype. Consequently, dictating how an instance
	representation should specify the relation to the schema is beyond the normative scope
	of this document (since this document specifically defines the JSON
	Schema media type, and no other), but it is recommended that instances
	specify their schema so that user agents can interpret the instance
	representation and messages may retain the self-descriptive
	characteristic, avoiding the need for out-of-band information about
	instance data. Two approaches are recommended for declaring the
	relation to the schema that describes the meaning of a JSON instance's (or collection 
	of instances) structure. A MIME type parameter named
	"profile" or a relation of "describedby" (which could be defined by a Link header) may be used:
      </p> 
<div style='display: table; width: 0; margin-left: 3em; margin-right: auto'><pre> 
Content-Type: application/my-media-type+json;
              profile=http://json.com/my-hyper-schema
</pre></div><p> 
	
	or if the content is being transferred by a protocol (such as HTTP) that
	provides headers, a Link header can be used:
      </p> 
<div style='display: table; width: 0; margin-left: 3em; margin-right: auto'><pre> 
Link: &lt;http://json.com/my-hyper-schema&gt;; rel="describedby"
</pre></div><p> 
 
	Instances MAY specify multiple schemas, to indicate all the schemas that 
	are applicable to the data, and the data SHOULD be valid by all the schemas. 
	The instance data MAY have multiple schemas 
	that it is defined by (the instance data SHOULD be valid for those schemas). 
	Or if the document is a collection of instances, the collection MAY contain 
	instances from different schemas. When collections contain heterogeneous 
	instances, the "pathStart" attribute MAY be specified in the 
	schema to disambiguate which schema should be applied for each item in the 
collection. However, ultimately, the mechanism for referencing a schema is up to the
	media type of the instance documents (if they choose to specify that schemas
	can be referenced).
	
</p> 
<a name="anchor7"></a><br /><hr /> 
<table summary="layout" cellpadding="0" cellspacing="2" class="TOCbug" align="right"><tr><td class="TOCbug"><a href="#toc">&nbsp;TOC&nbsp;</a></td></tr></table> 
<a name="rfc.section.4.1"></a><h3>4.1.&nbsp;
Self-Descriptive Schema</h3> 
 
<p> 
	JSON Schemas can themselves be described using JSON Schemas. 
	A self-describing JSON Schema for the core JSON Schema can
	be found at <a href='http://json-schema.org/schema'>http://json-schema.org/schema</a> for the latest version or 
	<a href='http://json-schema.org/draft-03/schema'>http://json-schema.org/draft-03/schema</a> for the draft-03 version. The hyper schema 
	self-description can be found at <a href='http://json-schema.org/hyper-schema'>http://json-schema.org/hyper-schema</a> 
	or <a href='http://json-schema.org/draft-03/hyper-schema'>http://json-schema.org/draft-03/hyper-schema</a>. All schemas
	used within a protocol with media type definitions
	SHOULD include a MIME parameter that refers to the self-descriptive
	hyper schema or another schema that extends this hyper schema:
      </p> 
<div style='display: table; width: 0; margin-left: 3em; margin-right: auto'><pre> 
Content-Type: application/json;
              profile=http://json-schema.org/draft-03/hyper-schema
</pre></div><p> 
 
	
</p> 
<a name="anchor8"></a><br /><hr /> 
<table summary="layout" cellpadding="0" cellspacing="2" class="TOCbug" align="right"><tr><td class="TOCbug"><a href="#toc">&nbsp;TOC&nbsp;</a></td></tr></table> 
<a name="rfc.section.5"></a><h3>5.&nbsp;
Core Schema Definition</h3> 
 
<p>A JSON Schema is a JSON Object that defines various attributes 
        (including usage and valid values) of a JSON value. JSON
        Schema has recursive capabilities; there are a number of elements
        in the structure that allow for nested JSON Schemas.
</p> 
<p>An example JSON Schema definition could look like:
</p><div style='display: table; width: 0; margin-left: 3em; margin-right: auto'><pre> 
{
  "description":"A person",
  "type":"object",
 
  "properties":{
    "name":{"type":"string"},
    "age" :{
    	"type":"integer",
    	"maximum":125
    }
  }
}
</pre></div> 
<p>A JSON Schema object may have any of the following properties, called schema
	attributes (all attributes are optional):
      
</p> 
<a name="anchor9"></a><br /><hr /> 
<table summary="layout" cellpadding="0" cellspacing="2" class="TOCbug" align="right"><tr><td class="TOCbug"><a href="#toc">&nbsp;TOC&nbsp;</a></td></tr></table> 
<a name="rfc.section.5.1"></a><h3>5.1.&nbsp;
type</h3> 
 
<p> 
This attribute defines what the primitive type or the schema of the instance MUST be in order to validate. 
This attribute can take one of two forms:
 
</p> 
<blockquote class="text"><dl> 
<dt>Simple Types</dt> 
<dd>A string indicating a primitive or simple type. The following are acceptable string values:
 
 
<blockquote class="text"><dl> 
<dt>string</dt> 
<dd>Value MUST be a string.
</dd> 
<dt>number</dt> 
<dd>Value MUST be a number, floating point numbers are allowed. 
</dd> 
<dt>integer</dt> 
<dd>Value MUST be an integer, no floating point numbers are allowed. This is a subset of the number type.
</dd> 
<dt>boolean</dt> 
<dd>Value MUST be a boolean. 
</dd> 
<dt>object</dt> 
<dd>Value MUST be an object.
</dd> 
<dt>array</dt> 
<dd>Value MUST be an array.
</dd> 
<dt>null</dt> 
<dd>Value MUST be null. Note this is mainly for purpose of being able use union types to define nullability. If this type is not 
included in a union, null values are not allowed (the primitives listed above do not allow nulls on their own).
</dd> 
<dt>any</dt> 
<dd>Value MAY be of any type including null. 
 
</dd> 
</dl></blockquote> 
If the property is not defined or is not in this list, then any type of value is acceptable. Other type values MAY be used for custom purposes, but minimal validators of the specification implementation can allow any instance value on unknown type values.
 
</dd> 
<dt>Union Types</dt> 
<dd>An array of two or more simple type definitions. Each item in the array MUST be a simple type definition or a schema. The instance value is valid if it is of the same type as one of the simple type definitions, or valid by one of the schemas, in the array. 
 
</dd> 
</dl></blockquote><p> 
 
</p> 
<p>For example, a schema that defines if an instance can be a string or a number would be:
</p><div style='display: table; width: 0; margin-left: 3em; margin-right: auto'><pre> 
{"type":["string","number"]}
</pre></div> 
<a name="properties"></a><br /><hr /> 
<table summary="layout" cellpadding="0" cellspacing="2" class="TOCbug" align="right"><tr><td class="TOCbug"><a href="#toc">&nbsp;TOC&nbsp;</a></td></tr></table> 
<a name="rfc.section.5.2"></a><h3>5.2.&nbsp;
properties</h3> 
 
<p>This attribute is an object with property definitions that define the valid values of instance object property values. When the instance value is an object, the property values of the instance object MUST conform to the property definitions in this object. In this object, each property definition's value MUST be a schema, and the property's name MUST be the name of the instance property that it defines. The instance property value MUST be valid according to the schema from the property definition. Properties are considered unordered, the order of the instance properties MAY be in any order.
</p> 
<a name="anchor10"></a><br /><hr /> 
<table summary="layout" cellpadding="0" cellspacing="2" class="TOCbug" align="right"><tr><td class="TOCbug"><a href="#toc">&nbsp;TOC&nbsp;</a></td></tr></table> 
<a name="rfc.section.5.3"></a><h3>5.3.&nbsp;
patternProperties</h3> 
 
<p>This attribute is an object that defines the schema for a set of property names of an object instance. The name of each property of this attribute's object is a regular expression pattern in the ECMA 262/Perl 5 format, while the value is a schema. If the pattern matches the name of a property on the instance object, the value of the instance's property MUST be valid against the pattern name's schema value.
</p> 
<a name="additionalProperties"></a><br /><hr /> 
<table summary="layout" cellpadding="0" cellspacing="2" class="TOCbug" align="right"><tr><td class="TOCbug"><a href="#toc">&nbsp;TOC&nbsp;</a></td></tr></table> 
<a name="rfc.section.5.4"></a><h3>5.4.&nbsp;
additionalProperties</h3> 
 
<p>This attribute defines a schema for all properties that are not explicitly defined in an object type definition. If specified, the value MUST be a schema or a boolean. If false is provided, no additional properties are allowed beyond the properties defined in the schema. The default value is an empty schema which allows any value for additional properties.
</p> 
<a name="anchor11"></a><br /><hr /> 
<table summary="layout" cellpadding="0" cellspacing="2" class="TOCbug" align="right"><tr><td class="TOCbug"><a href="#toc">&nbsp;TOC&nbsp;</a></td></tr></table> 
<a name="rfc.section.5.5"></a><h3>5.5.&nbsp;
items</h3> 
 
<p>This attribute defines the allowed items in an instance array, and MUST be a schema or an array of schemas. The default value is an empty schema which allows any value for items in the instance array.
</p> 
<p>When this attribute value is a schema and the instance value is an array, then all the items in the array MUST be valid according to the schema.
</p> 
<p>When this attribute value is an array of schemas and the instance value is an array, each position in the instance array MUST conform to the schema in the corresponding position for this array. This called tuple typing. When tuple typing is used, additional items are allowed, disallowed, or constrained by the <a class='info' href='#additionalItems'>"additionalItems"<span> (</span><span class='info'>additionalItems</span><span>)</span></a> attribute using the same rules as <a class='info' href='#additionalProperties'>"additionalProperties"<span> (</span><span class='info'>additionalProperties</span><span>)</span></a> for objects.
</p> 
<a name="additionalItems"></a><br /><hr /> 
<table summary="layout" cellpadding="0" cellspacing="2" class="TOCbug" align="right"><tr><td class="TOCbug"><a href="#toc">&nbsp;TOC&nbsp;</a></td></tr></table> 
<a name="rfc.section.5.6"></a><h3>5.6.&nbsp;
additionalItems</h3> 
 
<p>This provides a definition for additional items in an array instance when tuple definitions of the items is provided. This can be false to indicate additional items in the array are not allowed, or it can be a schema that defines the schema of the additional items.
</p> 
<a name="anchor12"></a><br /><hr /> 
<table summary="layout" cellpadding="0" cellspacing="2" class="TOCbug" align="right"><tr><td class="TOCbug"><a href="#toc">&nbsp;TOC&nbsp;</a></td></tr></table> 
<a name="rfc.section.5.7"></a><h3>5.7.&nbsp;
required</h3> 
 
<p>This attribute indicates if the instance must have a value, and not be undefined. This is false by default, making the instance optional.
</p> 
<a name="anchor13"></a><br /><hr /> 
<table summary="layout" cellpadding="0" cellspacing="2" class="TOCbug" align="right"><tr><td class="TOCbug"><a href="#toc">&nbsp;TOC&nbsp;</a></td></tr></table> 
<a name="rfc.section.5.8"></a><h3>5.8.&nbsp;
dependencies</h3> 
 
<p>This attribute is an object that defines the requirements of a property on an instance object. If an object instance has a property with the same name as a property in this attribute's object, then the instance must be valid against the attribute's property value (hereafter referred to as the "dependency value").
</p> 
<p> 
The dependency value can take one of two forms:
</p> 
<blockquote class="text"><dl> 
<dt>Simple Dependency</dt> 
<dd>If the dependency value is a string, then the instance object MUST have a property with the same name as the dependency value. If the dependency value is an array of strings, then the instance object MUST have a property with the same name as each string in the dependency value's array.
</dd> 
<dt>Schema Dependency</dt> 
<dd>If the dependency value is a schema, then the instance object MUST be valid against the schema.
</dd> 
</dl></blockquote><p> 
 
</p> 
<a name="anchor14"></a><br /><hr /> 
<table summary="layout" cellpadding="0" cellspacing="2" class="TOCbug" align="right"><tr><td class="TOCbug"><a href="#toc">&nbsp;TOC&nbsp;</a></td></tr></table> 
<a name="rfc.section.5.9"></a><h3>5.9.&nbsp;
minimum</h3> 
 
<p>This attribute defines the minimum value of the instance property when the type of the instance value is a number.
</p> 
<a name="anchor15"></a><br /><hr /> 
<table summary="layout" cellpadding="0" cellspacing="2" class="TOCbug" align="right"><tr><td class="TOCbug"><a href="#toc">&nbsp;TOC&nbsp;</a></td></tr></table> 
<a name="rfc.section.5.10"></a><h3>5.10.&nbsp;
maximum</h3> 
 
<p>This attribute defines the maximum value of the instance property when the type of the instance value is a number.
</p> 
<a name="anchor16"></a><br /><hr /> 
<table summary="layout" cellpadding="0" cellspacing="2" class="TOCbug" align="right"><tr><td class="TOCbug"><a href="#toc">&nbsp;TOC&nbsp;</a></td></tr></table> 
<a name="rfc.section.5.11"></a><h3>5.11.&nbsp;
exclusiveMinimum</h3> 
 
<p>This attribute indicates if the value of the instance (if the instance is a number) can not equal the number defined by the "minimum" attribute. This is false by default, meaning the instance value can be greater then or equal to the minimum value.
</p> 
<a name="anchor17"></a><br /><hr /> 
<table summary="layout" cellpadding="0" cellspacing="2" class="TOCbug" align="right"><tr><td class="TOCbug"><a href="#toc">&nbsp;TOC&nbsp;</a></td></tr></table> 
<a name="rfc.section.5.12"></a><h3>5.12.&nbsp;
exclusiveMaximum</h3> 
 
<p>This attribute indicates if the value of the instance (if the instance is a number) can not equal the number defined by the "maximum" attribute. This is false by default, meaning the instance value can be less then or equal to the maximum value.
</p> 
<a name="anchor18"></a><br /><hr /> 
<table summary="layout" cellpadding="0" cellspacing="2" class="TOCbug" align="right"><tr><td class="TOCbug"><a href="#toc">&nbsp;TOC&nbsp;</a></td></tr></table> 
<a name="rfc.section.5.13"></a><h3>5.13.&nbsp;
minItems</h3> 
 
<p>This attribute defines the minimum number of values in an array when the array is the instance value.
</p> 
<a name="anchor19"></a><br /><hr /> 
<table summary="layout" cellpadding="0" cellspacing="2" class="TOCbug" align="right"><tr><td class="TOCbug"><a href="#toc">&nbsp;TOC&nbsp;</a></td></tr></table> 
<a name="rfc.section.5.14"></a><h3>5.14.&nbsp;
maxItems</h3> 
 
<p>This attribute defines the maximum number of values in an array when the array is the instance value.
</p> 
<a name="uniqueItems"></a><br /><hr /> 
<table summary="layout" cellpadding="0" cellspacing="2" class="TOCbug" align="right"><tr><td class="TOCbug"><a href="#toc">&nbsp;TOC&nbsp;</a></td></tr></table> 
<a name="rfc.section.5.15"></a><h3>5.15.&nbsp;
uniqueItems</h3> 
 
<p>This attribute indicates that all items in an array instance MUST be unique (contains no two identical values).
</p> 
<p>Two instance are consider equal if they are both of the same type and:
</p> 
<blockquote class="text"> 
<p>are null; or
</p> 
<p>are booleans/numbers/strings and have the same value; or
</p> 
<p>are arrays, contains the same number of items, and each item in the array is equal to the corresponding item in the other array; or
</p> 
<p>are objects, contains the same property names, and each property in the object is equal to the corresponding property in the other object.
</p> 
</blockquote><p> 
 
</p> 
<a name="anchor20"></a><br /><hr /> 
<table summary="layout" cellpadding="0" cellspacing="2" class="TOCbug" align="right"><tr><td class="TOCbug"><a href="#toc">&nbsp;TOC&nbsp;</a></td></tr></table> 
<a name="rfc.section.5.16"></a><h3>5.16.&nbsp;
pattern</h3> 
 
<p>When the instance value is a string, this provides a regular expression that a string instance MUST match in order to be valid. Regular expressions SHOULD follow the regular expression specification from ECMA 262/Perl 5
</p> 
<a name="anchor21"></a><br /><hr /> 
<table summary="layout" cellpadding="0" cellspacing="2" class="TOCbug" align="right"><tr><td class="TOCbug"><a href="#toc">&nbsp;TOC&nbsp;</a></td></tr></table> 
<a name="rfc.section.5.17"></a><h3>5.17.&nbsp;
minLength</h3> 
 
<p>When the instance value is a string, this defines the minimum length of the string.
</p> 
<a name="anchor22"></a><br /><hr /> 
<table summary="layout" cellpadding="0" cellspacing="2" class="TOCbug" align="right"><tr><td class="TOCbug"><a href="#toc">&nbsp;TOC&nbsp;</a></td></tr></table> 
<a name="rfc.section.5.18"></a><h3>5.18.&nbsp;
maxLength</h3> 
 
<p>When the instance value is a string, this defines the maximum length of the string.
</p> 
<a name="anchor23"></a><br /><hr /> 
<table summary="layout" cellpadding="0" cellspacing="2" class="TOCbug" align="right"><tr><td class="TOCbug"><a href="#toc">&nbsp;TOC&nbsp;</a></td></tr></table> 
<a name="rfc.section.5.19"></a><h3>5.19.&nbsp;
enum</h3> 
 
<p>This provides an enumeration of all possible values that are valid for the instance property. This MUST be an array, and each item in the array represents a possible value for the instance value. If this attribute is defined, the instance value MUST be one of the values in the array in order for the schema to be valid. Comparison of enum values uses the same algorithm as defined in <a class='info' href='#uniqueItems'>"uniqueItems"<span> (</span><span class='info'>uniqueItems</span><span>)</span></a>.
</p> 
<a name="anchor24"></a><br /><hr /> 
<table summary="layout" cellpadding="0" cellspacing="2" class="TOCbug" align="right"><tr><td class="TOCbug"><a href="#toc">&nbsp;TOC&nbsp;</a></td></tr></table> 
<a name="rfc.section.5.20"></a><h3>5.20.&nbsp;
default</h3> 
 
<p>This attribute defines the default value of the instance when the instance is undefined.
</p> 
<a name="anchor25"></a><br /><hr /> 
<table summary="layout" cellpadding="0" cellspacing="2" class="TOCbug" align="right"><tr><td class="TOCbug"><a href="#toc">&nbsp;TOC&nbsp;</a></td></tr></table> 
<a name="rfc.section.5.21"></a><h3>5.21.&nbsp;
title</h3> 
 
<p>This attribute is a string that provides a short description of the instance property.
</p> 
<a name="anchor26"></a><br /><hr /> 
<table summary="layout" cellpadding="0" cellspacing="2" class="TOCbug" align="right"><tr><td class="TOCbug"><a href="#toc">&nbsp;TOC&nbsp;</a></td></tr></table> 
<a name="rfc.section.5.22"></a><h3>5.22.&nbsp;
description</h3> 
 
<p>This attribute is a string that provides a full description of the of purpose the instance property.
</p> 
<a name="anchor27"></a><br /><hr /> 
<table summary="layout" cellpadding="0" cellspacing="2" class="TOCbug" align="right"><tr><td class="TOCbug"><a href="#toc">&nbsp;TOC&nbsp;</a></td></tr></table> 
<a name="rfc.section.5.23"></a><h3>5.23.&nbsp;
format</h3> 
 
<p>This property defines the type of data, content type, or microformat to be expected in the instance property values. A format attribute MAY be one of the values listed below, and if so, SHOULD adhere to the semantics describing for the format. A format SHOULD only be used to give meaning to primitive types (string, integer, number, or boolean). Validators MAY (but are not required to) validate that the instance values conform to a format. The following formats are predefined:
</p> 
<p>  
</p> 
<blockquote class="text"><dl> 
<dt>date-time</dt> 
<dd>This SHOULD be a date in ISO 8601 format of YYYY-MM-DDThh:mm:ssZ in UTC time. This is the recommended form of date/timestamp.
 
</dd> 
<dt>date</dt> 
<dd>This SHOULD be a date in the format of YYYY-MM-DD. It is recommended that you use the "date-time" format instead of "date" unless you need to transfer only the date part.
 
</dd> 
<dt>time</dt> 
<dd>This SHOULD be a time in the format of hh:mm:ss. It is recommended that you use the "date-time" format instead of "time" unless you need to transfer only the time part.
 
</dd> 
<dt>utc-millisec</dt> 
<dd>This SHOULD be the difference, measured in milliseconds, between the specified time and midnight, 00:00 of January 1, 1970 UTC. The value SHOULD be a number (integer or float).
 
</dd> 
<dt>regex</dt> 
<dd>A regular expression, following the regular expression specification from ECMA 262/Perl 5.
 
</dd> 
<dt>color</dt> 
<dd>This is a CSS color (like "#FF0000" or "red"), based on <a class='info' href='#W3C.CR-CSS21-20070719'>CSS 2.1<span> (</span><span class='info'>Hickson, I., Lie, H., Çelik, T., and B. Bos, &ldquo;Cascading Style Sheets Level 2 Revision 1 (CSS 2.1) Specification,&rdquo; July&nbsp;2007.</span><span>)</span></a> [W3C.CR&#8209;CSS21&#8209;20070719].
 
</dd> 
<dt>style</dt> 
<dd>This is a CSS style definition (like "color: red; background-color:#FFF"), based on <a class='info' href='#W3C.CR-CSS21-20070719'>CSS 2.1<span> (</span><span class='info'>Hickson, I., Lie, H., Çelik, T., and B. Bos, &ldquo;Cascading Style Sheets Level 2 Revision 1 (CSS 2.1) Specification,&rdquo; July&nbsp;2007.</span><span>)</span></a> [W3C.CR&#8209;CSS21&#8209;20070719].
 
</dd> 
<dt>phone</dt> 
<dd>This SHOULD be a phone number (format MAY follow E.123).
 
</dd> 
<dt>uri</dt> 
<dd>This value SHOULD be a URI..
 
</dd> 
<dt>email</dt> 
<dd>This SHOULD be an email address.
 
</dd> 
<dt>ip-address</dt> 
<dd>This SHOULD be an ip version 4 address.
 
</dd> 
<dt>ipv6</dt> 
<dd>This SHOULD be an ip version 6 address.
 
</dd> 
<dt>host-name</dt> 
<dd>This SHOULD be a host-name.
</dd> 
</dl></blockquote><p> 
 
</p> 
<p>Additional custom formats MAY be created. These custom formats MAY be expressed as an URI, and this URI MAY reference a schema of that format.
</p> 
<a name="anchor28"></a><br /><hr /> 
<table summary="layout" cellpadding="0" cellspacing="2" class="TOCbug" align="right"><tr><td class="TOCbug"><a href="#toc">&nbsp;TOC&nbsp;</a></td></tr></table> 
<a name="rfc.section.5.24"></a><h3>5.24.&nbsp;
divisibleBy</h3> 
 
<p>This attribute defines what value the number instance must be divisible by with no remainder (the result of the division must be an integer.) The value of this attribute SHOULD NOT be 0.
</p> 
<a name="anchor29"></a><br /><hr /> 
<table summary="layout" cellpadding="0" cellspacing="2" class="TOCbug" align="right"><tr><td class="TOCbug"><a href="#toc">&nbsp;TOC&nbsp;</a></td></tr></table> 
<a name="rfc.section.5.25"></a><h3>5.25.&nbsp;
disallow</h3> 
 
<p>This attribute takes the same values as the "type" attribute, however if the instance matches the type or if this value is an array and the instance matches any type or schema in the array, then this instance is not valid.
</p> 
<a name="anchor30"></a><br /><hr /> 
<table summary="layout" cellpadding="0" cellspacing="2" class="TOCbug" align="right"><tr><td class="TOCbug"><a href="#toc">&nbsp;TOC&nbsp;</a></td></tr></table> 
<a name="rfc.section.5.26"></a><h3>5.26.&nbsp;
extends</h3> 
 
<p>The value of this property MUST be another schema which will provide a base schema which the current schema will inherit from. The inheritance rules are such that any instance that is valid according to the current schema MUST be valid according to the referenced schema. This MAY also be an array, in which case, the instance MUST be valid for all the schemas in the array. A schema that extends another schema MAY define additional attributes, constrain existing attributes, or add other constraints.
</p> 
<p>Conceptually, the behavior of extends can be seen as validating an
instance against all constraints in the extending schema as well as
the extended schema(s). More optimized implementations that merge
schemas are possible, but are not required. An example of using "extends":
      </p> 
<div style='display: table; width: 0; margin-left: 3em; margin-right: auto'><pre> 
{
  "description":"An adult",
  "properties":{"age":{"minimum": 21}},
  "extends":"person"
}
</pre></div><p> 
 
      </p> 
<div style='display: table; width: 0; margin-left: 3em; margin-right: auto'><pre> 
{
  "description":"Extended schema",
  "properties":{"deprecated":{"type": "boolean"}},
  "extends":"http://json-schema.org/draft-03/schema"
}
</pre></div><p> 
 
 
 
 
</p> 
<a name="anchor31"></a><br /><hr /> 
<table summary="layout" cellpadding="0" cellspacing="2" class="TOCbug" align="right"><tr><td class="TOCbug"><a href="#toc">&nbsp;TOC&nbsp;</a></td></tr></table> 
<a name="rfc.section.5.27"></a><h3>5.27.&nbsp;
id</h3> 
 
<p> 
This attribute defines the current URI of this schema (this attribute is
effectively a "self" link). This URI MAY be relative or absolute. If
the URI is relative it is resolved against the current URI of the parent
schema it is contained in. If this schema is not contained in any
parent schema, the current URI of the parent schema is held to be the
URI under which this schema was addressed. If id is missing, the current URI of a schema is
defined to be that of the parent schema. The current URI of the schema
is also used to construct relative references such as for $ref.
</p> 
<a name="anchor32"></a><br /><hr /> 
<table summary="layout" cellpadding="0" cellspacing="2" class="TOCbug" align="right"><tr><td class="TOCbug"><a href="#toc">&nbsp;TOC&nbsp;</a></td></tr></table> 
<a name="rfc.section.5.28"></a><h3>5.28.&nbsp;
$ref</h3> 
 
<p> 
This attribute defines a URI of a schema that contains the full representation of this schema. 
When a validator encounters this attribute, it SHOULD replace the current schema with the schema referenced by the value's URI (if known and available) and re-validate the instance. 
This URI MAY be relative or absolute, and relative URIs SHOULD be resolved against the URI of the current schema.
 
</p> 
<a name="anchor33"></a><br /><hr /> 
<table summary="layout" cellpadding="0" cellspacing="2" class="TOCbug" align="right"><tr><td class="TOCbug"><a href="#toc">&nbsp;TOC&nbsp;</a></td></tr></table> 
<a name="rfc.section.5.29"></a><h3>5.29.&nbsp;
$schema</h3> 
 
<p> 
This attribute defines a URI of a JSON Schema that is the schema of the current schema. 
When this attribute is defined, a validator SHOULD use the schema referenced by the value's URI (if known and available) when resolving <a class='info' href='#hyper-schema'>Hyper Schema<span> (</span><span class='info'>Hyper Schema</span><span>)</span></a> <a class='info' href='#links'>links<span> (</span><span class='info'>links</span><span>)</span></a>.
 
</p> 
<p> 
A validator MAY use this attribute's value to determine which version of JSON Schema the current schema is written in, and provide the appropriate validation features and behavior. 
Therefore, it is RECOMMENDED that all schema authors include this attribute in their schemas to prevent conflicts with future JSON Schema specification changes.
 
</p> 
<a name="hyper-schema"></a><br /><hr /> 
<table summary="layout" cellpadding="0" cellspacing="2" class="TOCbug" align="right"><tr><td class="TOCbug"><a href="#toc">&nbsp;TOC&nbsp;</a></td></tr></table> 
<a name="rfc.section.6"></a><h3>6.&nbsp;
Hyper Schema</h3> 
 
<p>The following attributes are specified in addition to those
attributes that already provided by the core schema with the specific
purpose of informing user agents of relations between resources based
on JSON data. Just as with JSON
schema attributes, all the attributes in hyper schemas are optional.
Therefore, an empty object is a valid (non-informative) schema, and
essentially describes plain JSON (no constraints on the structures).
Addition of attributes provides additive information for user agents.
</p> 
<a name="links"></a><br /><hr /> 
<table summary="layout" cellpadding="0" cellspacing="2" class="TOCbug" align="right"><tr><td class="TOCbug"><a href="#toc">&nbsp;TOC&nbsp;</a></td></tr></table> 
<a name="rfc.section.6.1"></a><h3>6.1.&nbsp;
links</h3> 
 
<p> 
The value of the links property MUST be an array, where each item 
in the array is a link description object which describes the link
relations of the instances.
 
</p> 
<a name="anchor34"></a><br /><hr /> 
<table summary="layout" cellpadding="0" cellspacing="2" class="TOCbug" align="right"><tr><td class="TOCbug"><a href="#toc">&nbsp;TOC&nbsp;</a></td></tr></table> 
<a name="rfc.section.6.1.1"></a><h3>6.1.1.&nbsp;
Link Description Object</h3> 
 
<p> 
A link description object is used to describe link relations. In 
the context of a schema, it defines the link relations of the 
instances of the schema, and can be parameterized by the instance
values. The link description format can be used on its own in
regular (non-schema documents), and use of this format can
be declared by referencing the normative link description
schema as the the schema for the data structure that uses the 
links. The URI of the normative link description schema is: 
<a href='http://json-schema.org/links'>http://json-schema.org/links</a> (latest version) or
<a href='http://json-schema.org/draft-03/links'>http://json-schema.org/draft-03/links</a> (draft-03 version).
 
</p> 
<a name="anchor35"></a><br /><hr /> 
<table summary="layout" cellpadding="0" cellspacing="2" class="TOCbug" align="right"><tr><td class="TOCbug"><a href="#toc">&nbsp;TOC&nbsp;</a></td></tr></table> 
<a name="rfc.section.6.1.1.1"></a><h3>6.1.1.1.&nbsp;
href</h3> 
 
<p> 
    The value of the "href" link description property
indicates the target URI of the related resource. The value
of the instance property SHOULD be resolved as a URI-Reference per <a class='info' href='#RFC3986'>RFC 3986<span> (</span><span class='info'>Berners-Lee, T., Fielding, R., and L. Masinter, &ldquo;Uniform Resource Identifier (URI): Generic Syntax,&rdquo; January&nbsp;2005.</span><span>)</span></a> [RFC3986]
and MAY be a relative URI. The base URI to be used for relative resolution
SHOULD be the URI used to retrieve the instance object (not the schema)
when used within a schema. Also, when links are used within a schema, the URI 
SHOULD be parametrized by the property values of the instance 
object, if property values exist for the corresponding variables
in the template (otherwise they MAY be provided from alternate sources, like user input).
 
</p> 
<p> 
Instance property values SHOULD be substituted into the URIs where
matching braces ('{', '}') are found surrounding zero or more characters,
creating an expanded URI. Instance property value substitutions are resolved
by using the text between the braces to denote the property name
from the instance to get the value to substitute. For example,
if an href value is defined:
      </p> 
<div style='display: table; width: 0; margin-left: 3em; margin-right: auto'><pre> 
http://somesite.com/{id}
</pre></div><p> 
 
Then it would be resolved by replace the value of the "id" property value from
the instance object. If the value of the "id" property was "45", the expanded
URI would be:
      </p> 
<div style='display: table; width: 0; margin-left: 3em; margin-right: auto'><pre> 
http://somesite.com/45
</pre></div><p> 
 
If matching braces are found with the string "@" (no quotes) between the braces, then the 
actual instance value SHOULD be used to replace the braces, rather than a property value.
This should only be used in situations where the instance is a scalar (string, 
boolean, or number), and not for objects or arrays.
 
</p> 
<a name="anchor36"></a><br /><hr /> 
<table summary="layout" cellpadding="0" cellspacing="2" class="TOCbug" align="right"><tr><td class="TOCbug"><a href="#toc">&nbsp;TOC&nbsp;</a></td></tr></table> 
<a name="rfc.section.6.1.1.2"></a><h3>6.1.1.2.&nbsp;
rel</h3> 
 
<p> 
The value of the "rel" property indicates the name of the 
relation to the target resource. The relation to the target SHOULD be interpreted as specifically from the instance object that the schema (or sub-schema) applies to, not just the top level resource that contains the object within its hierarchy. If a resource JSON representation contains a sub object with a property interpreted as a link, that sub-object holds the relation with the target. A relation to target from the top level resource MUST be indicated with the schema describing the top level JSON representation.
 
</p> 
<p> 
Relationship definitions SHOULD NOT be media type dependent, and users are encouraged to utilize existing accepted relation definitions, including those in existing relation registries (see <a class='info' href='#RFC4287'>RFC 4287<span> (</span><span class='info'>Nottingham, M., Ed. and R. Sayre, Ed., &ldquo;The Atom Syndication Format,&rdquo; December&nbsp;2005.</span><span>)</span></a> [RFC4287]). However, we define these relations here for clarity of normative interpretation within the context of JSON hyper schema defined relations:
</p> 
<blockquote class="text"><dl> 
<dt>self</dt> 
<dd> 
If the relation value is "self", when this property is encountered in
the instance object, the object represents a resource and the instance object is
treated as a full representation of the target resource identified by
the specified URI.
 
</dd> 
<dt>full</dt> 
<dd> 
This indicates that the target of the link is the full representation for the instance object. The object that contains this link possibly may not be the full representation.
 
</dd> 
<dt>describedby</dt> 
<dd> 
This indicates the target of the link is the schema for the instance object. This MAY be used to specifically denote the schemas of objects within a JSON object hierarchy, facilitating polymorphic type data structures.
 
</dd> 
<dt>root</dt> 
<dd>This relation indicates that the target of the link
SHOULD be treated as the root or the body of the representation for the
purposes of user agent interaction or fragment resolution. All other
properties of the instance objects can be regarded as meta-data
descriptions for the data.
 
</dd> 
</dl></blockquote><p> 
 
</p> 
<p> 
The following relations are applicable for schemas (the schema as the "from" resource in the relation):
</p> 
<blockquote class="text"><dl> 
<dt>instances</dt> 
<dd> 
This indicates the target resource that represents collection of instances of a schema. 
 
</dd> 
<dt>create</dt> 
<dd> 
This indicates a target to use for creating new instances of a schema. This link definition SHOULD be a submission link with a non-safe method (like POST).
 
</dd> 
</dl></blockquote><p> 
 
</p> 
<p> 
For example, if a schema is defined:
      </p> 
<div style='display: table; width: 0; margin-left: 3em; margin-right: auto'><pre> 
{
  "links": [
    {
      "rel": "self"
      "href": "{id}"
    },
    {
      "rel": "up"
      "href": "{upId}"
    },
    {
      "rel": "children"
      "href": "?upId={id}"
    }
  ]
}
</pre></div><p> 
 
And if a collection of instance resource's JSON representation was
retrieved:
    </p> 
<div style='display: table; width: 0; margin-left: 3em; margin-right: auto'><pre> 
GET /Resource/
 
[
  {
    "id": "thing",
    "upId": "parent"
  },
  {
    "id": "thing2",
    "upId": "parent"
  }
]
</pre></div><p> 
 
 
This would indicate that for the first item in the collection, its own
(self) URI would resolve to "/Resource/thing" and the first item's "up"
relation SHOULD be resolved to the resource at "/Resource/parent".
The "children" collection would be located at "/Resource/?upId=thing".
 
</p> 
<a name="anchor37"></a><br /><hr /> 
<table summary="layout" cellpadding="0" cellspacing="2" class="TOCbug" align="right"><tr><td class="TOCbug"><a href="#toc">&nbsp;TOC&nbsp;</a></td></tr></table> 
<a name="rfc.section.6.1.1.3"></a><h3>6.1.1.3.&nbsp;
targetSchema</h3> 
 
<p>This property value is a schema that defines the expected 
structure of the JSON representation of the target of the link.
</p> 
<a name="anchor38"></a><br /><hr /> 
<table summary="layout" cellpadding="0" cellspacing="2" class="TOCbug" align="right"><tr><td class="TOCbug"><a href="#toc">&nbsp;TOC&nbsp;</a></td></tr></table> 
<a name="rfc.section.6.1.1.4"></a><h3>6.1.1.4.&nbsp;
Submission Link Properties</h3> 
 
<p> 
The following properties also apply to link definition objects, and 
provide functionality analogous to HTML forms, in providing a 
means for submitting extra (often user supplied) information to send to a server.
 
</p> 
<a name="anchor39"></a><br /><hr /> 
<table summary="layout" cellpadding="0" cellspacing="2" class="TOCbug" align="right"><tr><td class="TOCbug"><a href="#toc">&nbsp;TOC&nbsp;</a></td></tr></table> 
<a name="rfc.section.6.1.1.4.1"></a><h3>6.1.1.4.1.&nbsp;
method</h3> 
 
<p> 
 
This attribute defines which method can be used to access the target resource. 
In an HTTP environment, this would be "GET" or "POST" (other HTTP methods 
such as "PUT" and "DELETE" have semantics that are clearly implied by 
accessed resources, and do not need to be defined here). 
This defaults to "GET".
 
</p> 
<a name="anchor40"></a><br /><hr /> 
<table summary="layout" cellpadding="0" cellspacing="2" class="TOCbug" align="right"><tr><td class="TOCbug"><a href="#toc">&nbsp;TOC&nbsp;</a></td></tr></table> 
<a name="rfc.section.6.1.1.4.2"></a><h3>6.1.1.4.2.&nbsp;
enctype</h3> 
 
<p> 
If present, this property indicates a query media type format that the server
supports for querying or posting to the collection of instances at the target 
resource. The query can be 
suffixed to the target URI to query the collection with
property-based constraints on the resources that SHOULD be returned from
the server or used to post data to the resource (depending on the method). 
For example, with the following schema:
    </p> 
<div style='display: table; width: 0; margin-left: 3em; margin-right: auto'><pre> 
{
 "links":[
   {
     "enctype":"application/x-www-form-urlencoded",
     "method":"GET",
     "href":"/Product/",
     "properties":{
        "name":{"description":"name of the product"}
     }
   }
 ]
}
</pre></div><p> 
 
This indicates that the client can query the server for instances that
have a specific name:
    </p> 
<div style='display: table; width: 0; margin-left: 3em; margin-right: auto'><pre> 
/Product/?name=Slinky
</pre></div><p> 
 
 
If no enctype or method is specified, only the single URI specified by 
the href property is defined. If the method is POST, "application/json" is 
the default media type.
 
</p> 
<a name="anchor41"></a><br /><hr /> 
<table summary="layout" cellpadding="0" cellspacing="2" class="TOCbug" align="right"><tr><td class="TOCbug"><a href="#toc">&nbsp;TOC&nbsp;</a></td></tr></table> 
<a name="rfc.section.6.1.1.4.3"></a><h3>6.1.1.4.3.&nbsp;
schema</h3> 
 
<p> 
This attribute contains a schema which defines the acceptable structure of the submitted
request (for a GET request, this schema would define the properties for the query string 
and for a POST request, this would define the body).
 
</p> 
<a name="anchor42"></a><br /><hr /> 
<table summary="layout" cellpadding="0" cellspacing="2" class="TOCbug" align="right"><tr><td class="TOCbug"><a href="#toc">&nbsp;TOC&nbsp;</a></td></tr></table> 
<a name="rfc.section.6.2"></a><h3>6.2.&nbsp;
fragmentResolution</h3> 
 
<p>This property indicates the fragment resolution protocol to use for
resolving fragment identifiers in URIs within the instance
representations. This applies to the instance object URIs and all
children of the instance object's URIs. The default fragment resolution
protocol is "slash-delimited", which is defined below. Other fragment
resolution protocols MAY be used, but are not defined in this
document.
 
 
</p> 
<p> 
The fragment identifier is based on <a class='info' href='#RFC2396'>RFC 2396, Sec 5<span> (</span><span class='info'>Berners-Lee, T., Fielding, R., and L. Masinter, &ldquo;Uniform Resource Identifiers (URI): Generic Syntax,&rdquo; August&nbsp;1998.</span><span>)</span></a> [RFC2396], and defines the
mechanism for resolving references to entities within a document.
 
</p> 
<a name="anchor43"></a><br /><hr /> 
<table summary="layout" cellpadding="0" cellspacing="2" class="TOCbug" align="right"><tr><td class="TOCbug"><a href="#toc">&nbsp;TOC&nbsp;</a></td></tr></table> 
<a name="rfc.section.6.2.1"></a><h3>6.2.1.&nbsp;
slash-delimited fragment resolution</h3> 
 
<p>With the slash-delimited fragment resolution protocol, the fragment
identifier is interpreted as a series of property reference tokens that start with and
are delimited by the "/" character (\x2F). Each property reference token
is a series of unreserved or escaped URI characters. Each property
reference token SHOULD be interpreted, starting from the beginning of
the fragment identifier, as a path reference in the target JSON
structure. The final target value of the fragment can be determined by
starting with the root of the JSON structure from the representation of
the resource identified by the pre-fragment URI. If the target is a JSON
object, then the new target is the value of the property with the name
identified by the next property reference token in the fragment. If the
target is a JSON array, then the target is determined by finding the
item in array the array with the index defined by the next property
reference token (which MUST be a number). The target is successively
updated for each property reference token, until the entire fragment has
been traversed. 
 
</p> 
<p> 
Property names SHOULD be URI-encoded. In particular, any "/" in a 
property name MUST be encoded to avoid being interpreted as a property 
delimiter.
 
</p> 
<p> 
For example, for the following JSON representation:
    </p> 
<div style='display: table; width: 0; margin-left: 3em; margin-right: auto'><pre> 
{
  "foo":{
    "anArray":[
      {"prop":44}
    ],
    "another prop":{
      "baz":"A string"
    }
  }
}
</pre></div><p> 
 
The following fragment identifiers would be resolved:
    </p> 
<div style='display: table; width: 0; margin-left: 3em; margin-right: auto'><pre> 
fragment identifier      resolution
-------------------      ----------
#                        self, the root of the resource itself
#/foo                    the object referred to by the foo property
#/foo/another%20prop     the object referred to by the "another prop"
                         property of the object referred to by the
                         "foo" property
#/foo/another%20prop/baz the string referred to by the value of "baz"
                         property of the "another prop" property of
                         the object referred to by the "foo" property
#/foo/anArray/0          the first object in the "anArray" array
</pre></div><p> 
 
 
</p> 
<a name="anchor44"></a><br /><hr /> 
<table summary="layout" cellpadding="0" cellspacing="2" class="TOCbug" align="right"><tr><td class="TOCbug"><a href="#toc">&nbsp;TOC&nbsp;</a></td></tr></table> 
<a name="rfc.section.6.2.2"></a><h3>6.2.2.&nbsp;
dot-delimited fragment resolution</h3> 
 
<p>The dot-delimited fragment resolution protocol is the same as 
slash-delimited fragment resolution protocol except that the "." character 
(\x2E) is used as the delimiter between property names (instead of "/") and 
the path does not need to start with a ".". For example, #.foo and #foo are a valid fragment
identifiers for referencing the value of the foo propery.
</p> 
<a name="anchor45"></a><br /><hr /> 
<table summary="layout" cellpadding="0" cellspacing="2" class="TOCbug" align="right"><tr><td class="TOCbug"><a href="#toc">&nbsp;TOC&nbsp;</a></td></tr></table> 
<a name="rfc.section.6.3"></a><h3>6.3.&nbsp;
readonly</h3> 
 
<p>This attribute indicates that the instance property SHOULD NOT be changed. Attempts by a user agent to modify the value of this property are expected to be rejected by a server.
</p> 
<a name="anchor46"></a><br /><hr /> 
<table summary="layout" cellpadding="0" cellspacing="2" class="TOCbug" align="right"><tr><td class="TOCbug"><a href="#toc">&nbsp;TOC&nbsp;</a></td></tr></table> 
<a name="rfc.section.6.4"></a><h3>6.4.&nbsp;
contentEncoding</h3> 
 
<p> 
If the instance property value is a string, this attribute defines that the string SHOULD be interpreted as binary data and decoded using the encoding named by this schema property. <a class='info' href='#RFC2045'>RFC 2045, Sec 6.1<span> (</span><span class='info'>Freed, N. and N. Borenstein, &ldquo;Multipurpose Internet Mail Extensions (MIME) Part One: Format of Internet Message Bodies,&rdquo; November&nbsp;1996.</span><span>)</span></a> [RFC2045] lists the possible values for this property.
 
</p> 
<a name="anchor47"></a><br /><hr /> 
<table summary="layout" cellpadding="0" cellspacing="2" class="TOCbug" align="right"><tr><td class="TOCbug"><a href="#toc">&nbsp;TOC&nbsp;</a></td></tr></table> 
<a name="rfc.section.6.5"></a><h3>6.5.&nbsp;
pathStart</h3> 
 
<p> 
This attribute is a URI that defines what the instance's URI MUST start with in order to validate. 
The value of the "pathStart" attribute MUST be resolved as per <a class='info' href='#RFC3986'>RFC 3986, Sec 5<span> (</span><span class='info'>Berners-Lee, T., Fielding, R., and L. Masinter, &ldquo;Uniform Resource Identifier (URI): Generic Syntax,&rdquo; January&nbsp;2005.</span><span>)</span></a> [RFC3986], 
and is relative to the instance's URI.
 
</p> 
<p> 
When multiple schemas have been referenced for an instance, the user agent 
can determine if this schema is applicable for a particular instance by 
determining if the URI of the instance begins with the the value of the "pathStart"
attribute. If the URI of the instance does not start with this URI, 
or if another schema specifies a starting URI that is longer and also matches the 
instance, this schema SHOULD NOT be applied to the instance. Any schema 
that does not have a pathStart attribute SHOULD be considered applicable 
to all the instances for which it is referenced.
 
</p> 
<a name="anchor48"></a><br /><hr /> 
<table summary="layout" cellpadding="0" cellspacing="2" class="TOCbug" align="right"><tr><td class="TOCbug"><a href="#toc">&nbsp;TOC&nbsp;</a></td></tr></table> 
<a name="rfc.section.6.6"></a><h3>6.6.&nbsp;
mediaType</h3> 
 
<p>This attribute defines the media type of the instance representations that this schema is defining.
 
</p> 
<a name="anchor49"></a><br /><hr /> 
<table summary="layout" cellpadding="0" cellspacing="2" class="TOCbug" align="right"><tr><td class="TOCbug"><a href="#toc">&nbsp;TOC&nbsp;</a></td></tr></table> 
<a name="rfc.section.7"></a><h3>7.&nbsp;
Security Considerations</h3> 
 
<p> 
This specification is a sub-type of the JSON format, and 
consequently the security considerations are generally the same as <a class='info' href='#RFC4627'>RFC 4627<span> (</span><span class='info'>Crockford, D., &ldquo;The application/json Media Type for JavaScript Object Notation (JSON),&rdquo; July&nbsp;2006.</span><span>)</span></a> [RFC4627]. 
However, an additional issue is that when link relation of "self"
is used to denote a full representation of an object, the user agent 
SHOULD NOT consider the representation to be the authoritative representation
of the resource denoted by the target URI if the target URI is not
equivalent to or a sub-path of the the URI used to request the resource 
representation which contains the target URI with the "self" link.
For example, if a hyper schema was defined:
    </p> 
<div style='display: table; width: 0; margin-left: 3em; margin-right: auto'><pre> 
{
  "links":[
  	{
  	  "rel":"self",
  	  "href":"{id}"
  	}
  ]
}
</pre></div><p> 
 
And a resource was requested from somesite.com:
    </p> 
<div style='display: table; width: 0; margin-left: 3em; margin-right: auto'><pre> 
GET /foo/
</pre></div><p> 
 
 
With a response of:
    </p> 
<div style='display: table; width: 0; margin-left: 3em; margin-right: auto'><pre> 
Content-Type: application/json; profile=/schema-for-this-data
[
  {"id":"bar", "name":"This representation can be safely treated \
        as authoritative "},
  {"id":"/baz", "name":"This representation should not be treated as \
        authoritative the user agent should make request the resource\
        from "/baz" to ensure it has the authoritative representation"},
  {"id":"http://othersite.com/something", "name":"This representation\
        should also not be treated as authoritative and the target\
        resource representation should be retrieved for the\
        authoritative representation"}
]
</pre></div><p> 
 
 
</p> 
<a name="anchor50"></a><br /><hr /> 
<table summary="layout" cellpadding="0" cellspacing="2" class="TOCbug" align="right"><tr><td class="TOCbug"><a href="#toc">&nbsp;TOC&nbsp;</a></td></tr></table> 
<a name="rfc.section.8"></a><h3>8.&nbsp;
IANA Considerations</h3> 
 
<p> 
   The proposed MIME media type for JSON Schema is "application/schema+json".
 
</p> 
<p> 
   Type name: application
 
</p> 
<p> 
   Subtype name: schema+json
 
</p> 
<p> 
   Required parameters: profile
   
</p> 
<p> 
   	The value of the profile parameter SHOULD be a URI (relative or absolute) that 
   	refers to the schema used to define the structure of this structure (the 
   	meta-schema). Normally the value would be http://json-schema.org/draft-03/hyper-schema,
   	but it is allowable to use other schemas that extend the hyper schema's meta-
   	schema.
 
</p> 
<p> 
   Optional parameters: pretty
   
</p> 
<p> 
   	The value of the pretty parameter MAY be true or false to indicate if additional
   	whitespace has been included to make the JSON representation easier to read.
 
</p> 
<a name="anchor51"></a><br /><hr /> 
<table summary="layout" cellpadding="0" cellspacing="2" class="TOCbug" align="right"><tr><td class="TOCbug"><a href="#toc">&nbsp;TOC&nbsp;</a></td></tr></table> 
<a name="rfc.section.8.1"></a><h3>8.1.&nbsp;
Registry of Link Relations</h3> 
 
<p> 
This registry is maintained by IANA per <a class='info' href='#RFC4287'>RFC 4287<span> (</span><span class='info'>Nottingham, M., Ed. and R. Sayre, Ed., &ldquo;The Atom Syndication Format,&rdquo; December&nbsp;2005.</span><span>)</span></a> [RFC4287] and this specification adds
four values: "full", "create", "instances", "root".  New
   assignments are subject to IESG Approval, as outlined in <a class='info' href='#RFC5226'>RFC 5226<span> (</span><span class='info'>Narten, T. and H. Alvestrand, &ldquo;Guidelines for Writing an IANA Considerations Section in RFCs,&rdquo; May&nbsp;2008.</span><span>)</span></a> [RFC5226].
   Requests should be made by email to IANA, which will then forward the
   request to the IESG, requesting approval.
 
 
</p> 
<a name="rfc.references"></a><br /><hr /> 
<table summary="layout" cellpadding="0" cellspacing="2" class="TOCbug" align="right"><tr><td class="TOCbug"><a href="#toc">&nbsp;TOC&nbsp;</a></td></tr></table> 
<a name="rfc.section.9"></a><h3>9.&nbsp;
References</h3> 
 
<a name="rfc.references1"></a><br /><hr /> 
<table summary="layout" cellpadding="0" cellspacing="2" class="TOCbug" align="right"><tr><td class="TOCbug"><a href="#toc">&nbsp;TOC&nbsp;</a></td></tr></table> 
<h3>9.1.&nbsp;Normative References</h3> 
<table width="99%" border="0"> 
<tr><td class="author-text" valign="top"><a name="RFC2045">[RFC2045]</a></td> 
<td class="author-text"><a href="mailto:ned@innosoft.com">Freed, N.</a> and <a href="mailto:nsb@nsb.fv.com">N. Borenstein</a>, &ldquo;<a href="http://tools.ietf.org/html/rfc2045">Multipurpose Internet Mail Extensions (MIME) Part One: Format of Internet Message Bodies</a>,&rdquo; RFC&nbsp;2045, November&nbsp;1996 (<a href="http://www.rfc-editor.org/rfc/rfc2045.txt">TXT</a>).</td></tr> 
<tr><td class="author-text" valign="top"><a name="RFC2119">[RFC2119]</a></td> 
<td class="author-text"><a href="mailto:sob@harvard.edu">Bradner, S.</a>, &ldquo;<a href="http://tools.ietf.org/html/rfc2119">Key words for use in RFCs to Indicate Requirement Levels</a>,&rdquo; BCP&nbsp;14, RFC&nbsp;2119, March&nbsp;1997 (<a href="http://www.rfc-editor.org/rfc/rfc2119.txt">TXT</a>, <a href="http://xml.resource.org/public/rfc/html/rfc2119.html">HTML</a>, <a href="http://xml.resource.org/public/rfc/xml/rfc2119.xml">XML</a>).</td></tr> 
<tr><td class="author-text" valign="top"><a name="RFC2396">[RFC2396]</a></td> 
<td class="author-text"><a href="mailto:timbl@w3.org">Berners-Lee, T.</a>, <a href="mailto:fielding@ics.uci.edu">Fielding, R.</a>, and <a href="mailto:masinter@parc.xerox.com">L. Masinter</a>, &ldquo;<a href="http://tools.ietf.org/html/rfc2396">Uniform Resource Identifiers (URI): Generic Syntax</a>,&rdquo; RFC&nbsp;2396, August&nbsp;1998 (<a href="http://www.rfc-editor.org/rfc/rfc2396.txt">TXT</a>, <a href="http://xml.resource.org/public/rfc/html/rfc2396.html">HTML</a>, <a href="http://xml.resource.org/public/rfc/xml/rfc2396.xml">XML</a>).</td></tr> 
<tr><td class="author-text" valign="top"><a name="RFC3339">[RFC3339]</a></td> 
<td class="author-text"><a href="mailto:GK@ACM.ORG">Klyne, G., Ed.</a> and <a href="mailto:chris.newman@sun.com">C. Newman</a>, &ldquo;<a href="http://tools.ietf.org/html/rfc3339">Date and Time on the Internet: Timestamps</a>,&rdquo; RFC&nbsp;3339, July&nbsp;2002 (<a href="http://www.rfc-editor.org/rfc/rfc3339.txt">TXT</a>, <a href="http://xml.resource.org/public/rfc/html/rfc3339.html">HTML</a>, <a href="http://xml.resource.org/public/rfc/xml/rfc3339.xml">XML</a>).</td></tr> 
<tr><td class="author-text" valign="top"><a name="RFC3986">[RFC3986]</a></td> 
<td class="author-text"><a href="mailto:timbl@w3.org">Berners-Lee, T.</a>, <a href="mailto:fielding@gbiv.com">Fielding, R.</a>, and <a href="mailto:LMM@acm.org">L. Masinter</a>, &ldquo;<a href="http://tools.ietf.org/html/rfc3986">Uniform Resource Identifier (URI): Generic Syntax</a>,&rdquo; STD&nbsp;66, RFC&nbsp;3986, January&nbsp;2005 (<a href="http://www.rfc-editor.org/rfc/rfc3986.txt">TXT</a>, <a href="http://xml.resource.org/public/rfc/html/rfc3986.html">HTML</a>, <a href="http://xml.resource.org/public/rfc/xml/rfc3986.xml">XML</a>).</td></tr> 
<tr><td class="author-text" valign="top"><a name="RFC4287">[RFC4287]</a></td> 
<td class="author-text"><a href="mailto:mnot@pobox.com">Nottingham, M., Ed.</a> and <a href="mailto:rfsayre@boswijck.com">R. Sayre, Ed.</a>, &ldquo;<a href="http://tools.ietf.org/html/rfc4287">The Atom Syndication Format</a>,&rdquo; RFC&nbsp;4287, December&nbsp;2005 (<a href="http://www.rfc-editor.org/rfc/rfc4287.txt">TXT</a>, <a href="http://xml.resource.org/public/rfc/html/rfc4287.html">HTML</a>, <a href="http://xml.resource.org/public/rfc/xml/rfc4287.xml">XML</a>).</td></tr> 
</table> 
 
<a name="rfc.references2"></a><br /><hr /> 
<table summary="layout" cellpadding="0" cellspacing="2" class="TOCbug" align="right"><tr><td class="TOCbug"><a href="#toc">&nbsp;TOC&nbsp;</a></td></tr></table> 
<h3>9.2.&nbsp;Informative References</h3> 
<table width="99%" border="0"> 
<tr><td class="author-text" valign="top"><a name="RFC2616">[RFC2616]</a></td> 
<td class="author-text"><a href="mailto:fielding@ics.uci.edu">Fielding, R.</a>, <a href="mailto:jg@w3.org">Gettys, J.</a>, <a href="mailto:mogul@wrl.dec.com">Mogul, J.</a>, <a href="mailto:frystyk@w3.org">Frystyk, H.</a>, <a href="mailto:masinter@parc.xerox.com">Masinter, L.</a>, <a href="mailto:paulle@microsoft.com">Leach, P.</a>, and <a href="mailto:timbl@w3.org">T. Berners-Lee</a>, &ldquo;<a href="http://tools.ietf.org/html/rfc2616">Hypertext Transfer Protocol -- HTTP/1.1</a>,&rdquo; RFC&nbsp;2616, June&nbsp;1999 (<a href="http://www.rfc-editor.org/rfc/rfc2616.txt">TXT</a>, <a href="http://www.rfc-editor.org/rfc/rfc2616.ps">PS</a>, <a href="http://www.rfc-editor.org/rfc/rfc2616.pdf">PDF</a>, <a href="http://xml.resource.org/public/rfc/html/rfc2616.html">HTML</a>, <a href="http://xml.resource.org/public/rfc/xml/rfc2616.xml">XML</a>).</td></tr> 
<tr><td class="author-text" valign="top"><a name="RFC4627">[RFC4627]</a></td> 
<td class="author-text">Crockford, D., &ldquo;<a href="http://tools.ietf.org/html/rfc4627">The application/json Media Type for JavaScript Object Notation (JSON)</a>,&rdquo; RFC&nbsp;4627, July&nbsp;2006 (<a href="http://www.rfc-editor.org/rfc/rfc4627.txt">TXT</a>).</td></tr> 
<tr><td class="author-text" valign="top"><a name="RFC5226">[RFC5226]</a></td> 
<td class="author-text">Narten, T. and H. Alvestrand, &ldquo;<a href="http://tools.ietf.org/html/rfc5226">Guidelines for Writing an IANA Considerations Section in RFCs</a>,&rdquo; BCP&nbsp;26, RFC&nbsp;5226, May&nbsp;2008 (<a href="http://www.rfc-editor.org/rfc/rfc5226.txt">TXT</a>).</td></tr> 
<tr><td class="author-text" valign="top"><a name="I-D.hammer-discovery">[I-D.hammer-discovery]</a></td> 
<td class="author-text">Hammer-Lahav, E., &ldquo;<a href="http://www.ietf.org/internet-drafts/draft-hammer-discovery-06.txt">LRDD: Link-based Resource Descriptor Discovery</a>,&rdquo; draft-hammer-discovery-06 (work in progress), May&nbsp;2010 (<a href="http://www.ietf.org/internet-drafts/draft-hammer-discovery-06.txt">TXT</a>).</td></tr> 
<tr><td class="author-text" valign="top"><a name="I-D.gregorio-uritemplate">[I-D.gregorio-uritemplate]</a></td> 
<td class="author-text">Gregorio, J., Fielding, R., Hadley, M., and M. Nottingham, &ldquo;<a href="http://www.ietf.org/internet-drafts/draft-gregorio-uritemplate-04.txt">URI Template</a>,&rdquo; draft-gregorio-uritemplate-04 (work in progress), March&nbsp;2010 (<a href="http://www.ietf.org/internet-drafts/draft-gregorio-uritemplate-04.txt">TXT</a>).</td></tr> 
<tr><td class="author-text" valign="top"><a name="I-D.nottingham-http-link-header">[I-D.nottingham-http-link-header]</a></td> 
<td class="author-text">Nottingham, M., &ldquo;<a href="http://www.ietf.org/internet-drafts/draft-nottingham-http-link-header-10.txt">Web Linking</a>,&rdquo; draft-nottingham-http-link-header-10 (work in progress), May&nbsp;2010 (<a href="http://www.ietf.org/internet-drafts/draft-nottingham-http-link-header-10.txt">TXT</a>).</td></tr> 
<tr><td class="author-text" valign="top"><a name="W3C.REC-html401-19991224">[W3C.REC-html401-19991224]</a></td> 
<td class="author-text">Raggett, D., Hors, A., and I. Jacobs, &ldquo;<a href="http://www.w3.org/TR/1999/REC-html401-19991224">HTML 4.01 Specification</a>,&rdquo; World Wide Web Consortium Recommendation&nbsp;REC-html401-19991224, December&nbsp;1999 (<a href="http://www.w3.org/TR/1999/REC-html401-19991224">HTML</a>).</td></tr> 
<tr><td class="author-text" valign="top"><a name="W3C.CR-CSS21-20070719">[W3C.CR-CSS21-20070719]</a></td> 
<td class="author-text">Hickson, I., Lie, H., Çelik, T., and B. Bos, &ldquo;<a href="http://www.w3.org/TR/2007/CR-CSS21-20070719">Cascading Style Sheets Level 2 Revision 1 (CSS 2.1) Specification</a>,&rdquo; World Wide Web Consortium CR&nbsp;CR-CSS21-20070719, July&nbsp;2007 (<a href="http://www.w3.org/TR/2007/CR-CSS21-20070719">HTML</a>).</td></tr> 
</table> 
 
<a name="anchor54"></a><br /><hr /> 
<table summary="layout" cellpadding="0" cellspacing="2" class="TOCbug" align="right"><tr><td class="TOCbug"><a href="#toc">&nbsp;TOC&nbsp;</a></td></tr></table> 
<a name="rfc.section.A"></a><h3>Appendix A.&nbsp;
Change Log</h3> 
 
<p> 
        </p> 
<blockquote class="text"><dl> 
<dt>draft-03</dt> 
<dd> 
            
<ul class="text"> 
<li>Added example and verbiage to "extends" attribute.
</li> 
<li>Defined slash-delimited to use a leading slash.
</li> 
<li>Made "root" a relation instead of an attribute.
</li> 
<li>Removed address values, and MIME media type from format to reduce confusion (mediaType already exists, so it can be used for MIME types).
</li> 
<li>Added more explanation of nullability.
</li> 
<li>Removed "alternate" attribute.
</li> 
<li>Upper cased many normative usages of must, may, and should.
</li> 
<li>Replaced the link submission "properties" attribute to "schema" attribute.
</li> 
<li>Replaced "optional" attribute with "required" attribute.
</li> 
<li>Replaced "maximumCanEqual" attribute with "exclusiveMaximum" attribute.
</li> 
<li>Replaced "minimumCanEqual" attribute with "exclusiveMinimum" attribute.
</li> 
<li>Replaced "requires" attribute with "dependencies" attribute.
</li> 
<li>Moved "contentEncoding" attribute to hyper schema.
</li> 
<li>Added "additionalItems" attribute.
</li> 
<li>Added "id" attribute.
</li> 
<li>Switched self-referencing variable substitution from "-this" to "@" to align with reserved characters in URI template.
</li> 
<li>Added "patternProperties" attribute.
</li> 
<li>Schema URIs are now namespace versioned.
</li> 
<li>Added "$ref" and "$schema" attributes.
</li> 
</ul> 
          
</dd> 
<dt>draft-02</dt> 
<dd> 
            
<ul class="text"> 
<li>Replaced "maxDecimal" attribute with "divisibleBy" attribute.
</li> 
<li>Added slash-delimited fragment resolution protocol and made it the default.
</li> 
<li>Added language about using links outside of schemas by referencing its normative URI.
</li> 
<li>Added "uniqueItems" attribute.
</li> 
<li>Added "targetSchema" attribute to link description object.
</li> 
</ul> 
          
</dd> 
<dt>draft-01</dt> 
<dd> 
            
<ul class="text"> 
<li>Fixed category and updates from template.
</li> 
</ul> 
          
</dd> 
<dt>draft-00</dt> 
<dd> 
            
<ul class="text"> 
<li>Initial draft.
</li> 
</ul> 
          
</dd> 
</dl></blockquote><p> 
      
</p> 
<a name="anchor55"></a><br /><hr /> 
<table summary="layout" cellpadding="0" cellspacing="2" class="TOCbug" align="right"><tr><td class="TOCbug"><a href="#toc">&nbsp;TOC&nbsp;</a></td></tr></table> 
<a name="rfc.section.B"></a><h3>Appendix B.&nbsp;
Open Issues</h3> 
 
<p> 
      </p> 
<blockquote class="text"> 
<p>Should we give a preference to MIME headers over Link headers (or only use one)?
</p> 
<p>Should "root" be a MIME parameter?
</p> 
<p>Should "format" be renamed to "mediaType" or "contentType" to reflect the usage MIME media types that are allowed?
</p> 
<p>How should dates be handled?
</p> 
</blockquote><p> 
      
</p> 
<a name="rfc.authors"></a><br /><hr /> 
<table summary="layout" cellpadding="0" cellspacing="2" class="TOCbug" align="right"><tr><td class="TOCbug"><a href="#toc">&nbsp;TOC&nbsp;</a></td></tr></table> 
<h3>Authors' Addresses</h3> 
<table width="99%" border="0" cellpadding="0" cellspacing="0"> 
<tr><td class="author-text">&nbsp;</td> 
<td class="author-text">Kris Zyp (editor)</td></tr> 
<tr><td class="author-text">&nbsp;</td> 
<td class="author-text">SitePen (USA)</td></tr> 
<tr><td class="author-text">&nbsp;</td> 
<td class="author-text">530 Lytton Avenue</td></tr> 
<tr><td class="author-text">&nbsp;</td> 
<td class="author-text">Palo Alto, CA 94301</td></tr> 
<tr><td class="author-text">&nbsp;</td> 
<td class="author-text">USA</td></tr> 
<tr><td class="author" align="right">Phone:&nbsp;</td> 
<td class="author-text">+1 650 968 8787</td></tr> 
<tr><td class="author" align="right">EMail:&nbsp;</td> 
<td class="author-text"><a href="mailto:kris@sitepen.com">kris@sitepen.com</a></td></tr> 
<tr cellpadding="3"><td>&nbsp;</td><td>&nbsp;</td></tr> 
<tr><td class="author-text">&nbsp;</td> 
<td class="author-text">Gary Court</td></tr> 
<tr><td class="author-text">&nbsp;</td> 
<td class="author-text">Calgary, AB</td></tr> 
<tr><td class="author-text">&nbsp;</td> 
<td class="author-text">Canada</td></tr> 
<tr><td class="author" align="right">EMail:&nbsp;</td> 
<td class="author-text"><a href="mailto:gary.court@gmail.com">gary.court@gmail.com</a></td></tr> 
</table> 
</body></html> 